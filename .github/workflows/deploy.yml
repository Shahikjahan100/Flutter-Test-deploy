name: Flutter WARDROBE APK Builder

on:
  workflow_dispatch:
    inputs:
      flutter_version:
        description: 'Flutter version'
        required: false
        default: '3.16.0'
        type: string
      build_type:
        description: 'Build type'
        required: false
        default: 'debug'
        type: choice
        options:
          - debug
          - release

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ github.event.inputs.flutter_version }}
          channel: 'stable'

      - name: Flutter doctor
        run: flutter doctor -v

      - name: Set Android SDK Path
        run: |
          echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV

      - name: Create local.properties
        run: |
          echo "sdk.dir=$ANDROID_HOME" > android/local.properties

      - name: Accept Android licenses
        run: yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || true

      - name: Get dependencies
        run: flutter pub get

      - name: Fix Gradle permissions
        run: |
          cd android
          chmod +x ./gradlew

      - name: Update Gradle wrapper if needed
        run: |
          cd android
          ./gradlew wrapper --gradle-version 7.5

      - name: Debug Environment
        run: |
          echo "ANDROID_HOME: $ANDROID_HOME"
          echo "FLUTTER_HOME: $FLUTTER_HOME"
          echo "JAVA_HOME: $JAVA_HOME"
          ls -la android

      - name: Build APK
        run: |
          flutter clean

          if [ "${{ github.event.inputs.build_type }}" = "release" ]; then
            flutter build apk --release --split-per-abi
          else
            flutter build apk --debug
          fi

      - name: List build outputs
        if: always()
        run: |
          echo "Checking build output directory"
          find build -name "*.apk" -type f

      - name: Upload APKs
        uses: actions/upload-artifact@v3
        with:
          name: wardrobe-app-${{ github.event.inputs.build_type }}
          path: |
            build/app/outputs/flutter-apk/*.apk
            build/app/outputs/apk/**/*.apk
